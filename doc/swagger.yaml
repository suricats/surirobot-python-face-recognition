swagger: '2.0'
info:
  description: A management API for face_recognition module.
  version: 1.0.0
  title: Face Recognition API
basePath: /api
tags:
  - name: users
    description: Everything about your users
schemes:
  - http
paths:
  /users:
    get:
      tags:
        - users
      summary: List all users
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - users
      summary: Add a picture to the user
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid input or username already taken
  '/users/{userId}':
    get:
      tags:
        - users
      summary: Get user
      description: ''
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
    put:
      tags:
        - users
      summary: Add a new user
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user to edit
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid input or username already taken
    delete:
      tags:
        - users
      summary: Deletes an user
      description: ''
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
  '/users/{userId}/pictures':
    get:
      tags:
        - pictures
      summary: List all user's Pictures
      description: ''
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Picture'
    post:
      tags:
        - pictures
      summary: Add a picture to user
      description: ''
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User id
          required: true
          type: integer
          format: int64
        - in: formData
          name: picture
          description: User picture
          required: true
          type: file
      responses:
        '400':
          description: Invalid input or username already taken
  '/users/{userId}/pictures/{pictureId}':
    get:
      tags:
        - pictures
      summary: Get Picture
      description: ''
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User id
          required: true
          type: integer
          format: int64
        - name: pictureId
          in: path
          description: Picture id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Picture'
    put:
      tags:
        - pictures
      summary: Update user's picture
      description: ''
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User id
          required: true
          type: integer
          format: int64
        - name: pictureId
          in: path
          description: Picture id
          required: true
          type: integer
          format: int64
        - in: formData
          name: picture
          description: User picture
          required: true
          type: file
      responses:
        '400':
          description: Invalid input or username already taken
    delete:
      tags:
        - pictures
      summary: Deletes an picture
      description: ''
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User id to delete
          required: true
          type: integer
          format: int64
        - name: pictureId
          in: path
          description: Picture id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
  
securityDefinitions:
  token:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    required:
      - firstname
      - name
    properties:
      id:
        type: integer
        format: int64
      firstname:
        type: string
      name:
        type: string
  Picture:
    type: object
    required:
      - path
    properties:
      id:
        type: integer
        format: int64
      path:
        type: string
